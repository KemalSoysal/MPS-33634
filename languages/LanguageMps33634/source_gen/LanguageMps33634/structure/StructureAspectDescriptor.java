package LanguageMps33634.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptChild = createDescriptorForChild();
  /*package*/ final ConceptDescriptor myConceptMacro = createDescriptorForMacro();
  /*package*/ final ConceptDescriptor myConceptRoot = createDescriptorForRoot();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptChild, myConceptMacro, myConceptRoot);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Child:
        return myConceptChild;
      case LanguageConceptSwitch.Macro:
        return myConceptMacro;
      case LanguageConceptSwitch.Root:
        return myConceptRoot;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForChild() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("LanguageMps33634", "Child", 0x11bf32844aec417cL, 0x98dfed1caa7260bcL, 0x52a5e623b92b0d48L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c0bc5d6b-f957-4513-a8ff-e325738c8464(LanguageMps33634.structure)/5955419123372199240");
    b.version(2);
    b.alias("child");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForMacro() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("LanguageMps33634", "Macro", 0x11bf32844aec417cL, 0x98dfed1caa7260bcL, 0x6d97cb85c70cbb1bL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c0bc5d6b-f957-4513-a8ff-e325738c8464(LanguageMps33634.structure)/7897004247048043291");
    b.version(2);
    b.property("value", 0x6d97cb85c70cbb1eL).type(PrimitiveTypeId.STRING).origin("7897004247048043294").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRoot() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("LanguageMps33634", "Root", 0x11bf32844aec417cL, 0x98dfed1caa7260bcL, 0x52a5e623b92b0d47L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:c0bc5d6b-f957-4513-a8ff-e325738c8464(LanguageMps33634.structure)/5955419123372199239");
    b.version(2);
    b.aggregate("macro", 0x6d97cb85c70cbb51L).target(0x11bf32844aec417cL, 0x98dfed1caa7260bcL, 0x6d97cb85c70cbb1bL).optional(true).ordered(true).multiple(true).origin("7897004247048043345").done();
    b.aggregate("child", 0x52a5e623b92b0d4bL).target(0x11bf32844aec417cL, 0x98dfed1caa7260bcL, 0x52a5e623b92b0d48L).optional(true).ordered(true).multiple(false).origin("5955419123372199243").done();
    b.alias("root");
    return b.create();
  }
}
